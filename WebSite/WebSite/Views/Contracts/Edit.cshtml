@model Classes.Contract

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Contract</h2>

@using (Html.BeginForm("Edit", "Contracts", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.Employee_ID)
    @Html.HiddenFor(model => model.Document)

    <div class="form-group">
       Employee
        <div class="col-md-10">
           <input type="text" readonly disabled="disabled" class="form-control" name="NIC" value="@Model.Employee.NIC"/>
            @Html.ValidationMessage("NIC", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Contract", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Start, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="datetime-local" name="Start" class="datetimepicker form-control col-md-4" value="@Model.Start.ToString("s")" 
                    accept=".pdf"/>
            @Html.ValidationMessageFor(model => model.Start, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Document, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group">
                <div class="custom-file col-md-4">
                    <input type="file" name="Document" value="Upload Contract Document" class="custom-file-input" />
                    <label class="custom-file-label">Choose file</label>
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.Document, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btnSave" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("  Back to List", "Index", null, new { @class = "LinkBack" })
</div>
