@model Classes.Contract

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add Employee's Contract</h2>

@using (Html.BeginForm("Create", "Contracts", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Employee_NIC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Employee_NIC", null, htmlAttributes: new {   @class = "form-control col-md-4"  })
            @Html.ValidationMessageFor(model => model.Employee_NIC, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Type", null, htmlAttributes :new {   @class = "form-control col-md-4"  })
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Start, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="datetime-local" name="Start" value="@DateTime.Now.ToString("s")" class="datetimepicker form-control col-md-4">
            @Html.ValidationMessageFor(model => model.Start, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.End, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="datetime-local" name="End" class="datetimepicker form-control col-md-4">
            @Html.ValidationMessageFor(model => model.End, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Document, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group">
                <div class="custom-file col-md-4">
                    <input type="file" name="Document" value="Upload Contract Document" class="custom-file-input" />
                    <label class="custom-file-label">Choose file</label>
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.Document, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btnCreate" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("  Back to List", "Index", null, new { @class = "LinkBack" })
</div>
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script>
    $(function () {
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    alert(e.target.result);
                    $('#DocumentPath').attr('value', e.target.result);
                }

                //reader.readAsDataURL(input.files[0]); // convert to base64 string
            }


            $("input[name='Document']").change(function () {
                readURL(this);
            });

            $("select[name='Type']").change(function () {
                var type = $(this).val()
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetType")',
                    data: '{type' + type + '}',
                    dataType: 'json',
                    contentType: "application/json; charset=utf-8",
                    success: function (Type) {
                        $("input[name='End']").prop("disable",!Type.Duration)
                    }, error: function () {

                    }

                })
            });

        }
    })
</script>