@model Classes.Models.UserInfo

@{
    ViewBag.Title = "EditPersonalInfo";
    Layout = "~/Views/Shared/_Layout.cshtml";
    String img = "PNG/User.png";
    if (!String.IsNullOrEmpty(WebSite.Models.Account.User.Photo))
    {
        img = "Images/Users/" + WebSite.Models.Account.User.Photo;
    }
}

<h2>Personal Info</h2>

@using (Html.BeginForm("EditPersonalInfo", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Photo)

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="~/Content/@img" id="Photo" alt="Alternate Text" width="200" height="200" class="img-thumbnail" />
                <div class="input-group">
                    <div class="custom-file d-inline col-md-4">
                        <input type="file" name="ImageUrl" value="Upload Image" class="custom-file-input " />
                        <label class="custom-file-label">Choose file</label>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NIC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NIC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NIC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Gender", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButton("Gender", "Male", Model.Gender.CompareTo("Male") == 0) Male
                @Html.RadioButton("Gender", "Female", Model.Gender.CompareTo("Female") == 0) Female
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btnSave" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("  Back", "UserProfile", null, new { @class = "LinkBack" })
</div>

@section Scripts{
    <script>
        $(function () {
            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#Photo').attr('src', e.target.result);
                    }

                    reader.readAsDataURL(input.files[0]); // convert to base64 string
                }
            }

            $("input[name='ImageUrl']").change(function () {
                readURL(this);
            });


        })
    </script>

}