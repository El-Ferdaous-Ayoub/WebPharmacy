@model Classes.Employee

@{ ViewBag.Title = "UserProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
    String img = "PNG/User.png";
    if (!String.IsNullOrEmpty(Model.Picture))
    {
        img = "Images/Users/" + Model.Picture;
    } }


<h2>Profile</h2>


@using (Html.BeginForm("UserProfile", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
@Html.AntiForgeryToken()
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.Password)
    @Html.HiddenFor(model => model.Picture)
    @Html.HiddenFor(model => model.Department_ID)
    @Html.HiddenFor(model => model.BankAccountN)



    <div class="form-group">
        @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <img src="~/Content/@img" id="Photo" alt="Alternate Text" width="200" height="200" class="img-thumbnail" />
            <div class="input-group">
                <div class="custom-file d-inline col-md-4">
                    <input type="file" name="ImageUrl" value="Upload Image" class="custom-file-input " 
                           accept=".jpg, .png, .jpeg, .gif, .bmp, .tif, .tiff|image/*"/>
                    <label class="custom-file-label">Choose file</label>
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        <h4></h4>
        <div class="form-group">
            @Html.LabelFor(model => model.NIC, htmlAttributes: new { @class = "control-label col-md-2 d-inline" })
            @Html.EditorFor(model => model.NIC, new { htmlAttributes = new { @class = "form-control col-md-2 d-inline" } })
            @Html.ActionLink("Change Password", "ChangePassword", null, new { @class = "btn btn-primary d-inline" })
        </div>
    </div>

    <div style="overflow: auto;display:block">
        <hr />
        <h4>Personal Info</h4>
        <div style="width: 80%; float:left">
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2 d-inline" })
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control col-md-2 d-inline" } })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2 d-inline" })
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control col-md-2 d-inline" } })
            </div>

            <div class="form-group">
                @Html.Label("Gender", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.RadioButton("Gender", "Male", Model.Gender.CompareTo("Male") == 0) Male
                    @Html.RadioButton("Gender", "Female", Model.Gender.CompareTo("Female") == 0) Female
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>

    <div>
        <hr />
        <h4>Contact</h4>
        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2 d-inline" })
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control col-md-2 d-inline" } })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone2, htmlAttributes: new { @class = "control-label col-md-2 d-inline" })
            @Html.EditorFor(model => model.Phone2, new { htmlAttributes = new { @class = "form-control col-md-2 d-inline" } })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 d-inline" })
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control col-md-4 d-inline" } })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2 d-inline" })
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control col-md-4 d-inline" } })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btnSave" />
        </div>
    </div>
</div>
}

@if (WebSite.Models.Account.Department != null)
{
<div>
    <hr />
    <h4>Job</h4>
    <div class="form-group">
        @Html.LabelFor(model => model.Department.Title, htmlAttributes: new { @class = "control-label col-md-2 d-inline" })
        @Html.Label(WebSite.Models.Account.Department.Title, new { htmlAttributes = new { @class = "form-control col-md-2 d-inline" } })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BankAccountN, htmlAttributes: new { @class = "control-label col-md-2 d-inline" })
        @Html.Label(Model.BankAccountN, new { htmlAttributes = new { @class = "form-control col-md-2 d-inline" } })
    </div>
</div>


}

                                   

<div>
    @Html.ActionLink("  Back", "UserProfile", null, new { @class = "LinkBack" })
</div>




@section Scripts{
    <script>
        $(function () {
            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#Photo').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]); // convert to base64 string
                }
            }

            $("input[name='ImageUrl']").change(function () {
                readURL(this);
            });
        })
    </script>
}